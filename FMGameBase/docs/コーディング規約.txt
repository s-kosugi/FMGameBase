
０．共通規則
・命名は可能なかぎりわかりやすい物を心掛けて、ローマ字表記は使わないこと。
・コンパイルエラーや警告は必ず出ない状態でSVNへのコミットを心掛けること。

１．ファイル構成
・クラス名と拡張子を除いたファイル名を一致させること。
・フォルダ名は先頭のcやIを除いたクラス名と同じ名前にすること。
・フォルダ構成は原則としてツリー構造に則った形にすること。(例外はプログラムリーダーに確認する。）
・１ファイルにつき複数クラスを定義してはならない。
例：cPlayer.hの中にcPlayerクラスを作成する。

構成例：
ICharacter.cpp
ICharacter.h
Playerフォルダ
　｜
　 ――cPlayer.h
　｜
　 ――cPlayer.cpp

２．クラス名
・クラス名先頭に小文字のcをつけること。
・クラスそのものをインスタンス化しない基底クラスに関しては、クラス名先頭に大文字のIをつけること。
・単語の先頭は大文字にする。それ以外は小文字にすること。

３．変数
・メンバ変数名はm_から始まる変数名にすること。
・m_の後に変数の型名の略称を入れること。
(n:整数 f:浮動小数 等基本はシステムハンガリアン記法に則ること。）
例１：int型のメンバ変数を宣言する。int m_nNumber;
例２：float型のローカル変数を宣言する。float fLength;
参考URL:https://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%B3%E3%82%AC%E3%83%AA%E3%82%A2%E3%83%B3%E8%A8%98%E6%B3%95

３.５.定数
・定数名は全て大文字にし、単語単位で"_(アンダーバー)"で区切ること。
・定数はクラス内全てのオブジェクトで共通して使うものはstaticをつけること。
例：static const int PLAYER_POSX;


４．関数
・全ての関数名は動詞から始まること。
・動詞の後に対象となる名詞を入れること。
・メンバ関数の場合は重複した名前にならないように気を付けること。
例１：GetStatus( );
例２：cEffectクラス内でGetEffectPos()はEffectが重複しているので×

・処理が短い１，２文で済むアクセッサー系の関数等はinlineキーワードを付けてヘッダーに作っても良い。
例１：ヘッダーファイル内にinline int GetHp(){ return m_nHp; };

・bool値のゲッターについてはIsを先頭につけた関数名にしても良い。
例：bool IsVisible( void );


５．コメント
・各.cppファイルと.hファイルの先頭には必ずファイル説明のコメントを付けること。
・クラス作成者の名前を必ず記入すること。(コピペで済まさない）
・名前だけで各メンバの動作がわかりづらいと思う物に対しては、必ずコメントで補足を入れること。
・関数内の意図がわかりづらい物に関してはコメントで補足を入れること。

・見ればわかるレベルのコメントは入れない。
ダメな例： int i = 0; // iに０を代入

６．デバッグのみで使う機能に関しては
#ifdef DEBUG
#endif
を活用し、デバッグ中でのみコンパイルされるようにすること。
